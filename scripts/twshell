#!/bin/sh
# toughwlan v1.0 install script
# author: jamiesun.net@gmail.com

rundir=/home/toughrun


usage ()
{
    cat <<EOF
    Usage: $0 [OPTIONS] instance

    docker_setup               install docker, docker-compose
    pull                       toughwlan docker images pull
    install                    install toughwlan 
    remove                     uninstall toughwlan and database
    status                     toughwlan instance status
    restart                    toughwlan instance restart
    stop                       toughwlan instance stop
    upgrade                    toughwlan instance upgrade
    uplib                      toughwlan instance upgrade lib
    logs                       toughwlan instance logs
    dsh                        toughwlan instance bash term

    All other options are passed to the twshell program.
EOF
        exit 1
}


install()
{
    instance=${1:-toughwlan}

    mkdir -p ${rundir}/$instance

    read -p "toughwlan web port [1810]: " admin_port
    admin_port=${admin_port:-1810}

    read -p "toughwlan portal logout listen port [50100]: " portal_listen_port
    portal_listen_port=${portal_listen_port:-50100}

    read -p "mysql host (if none, use sqlite, without haproxy): " mysql_host

    if [ -z $mysql_host ]; then
        echo "toughwlan instance config (default sqlite and without haproxy):"
        echo "instance name: $instance"
        echo "web port: ${admin_port}"
        echo "portal_listen_port: ${portal_listen_port}"
        rm -f ${rundir}/$instance/docker-compose.yml
        cat > ${rundir}/$instance/docker-compose.yml  <<EOF
wlan:
    container_name: wlan_${instance}
    command: /usr/local/bin/toughrun standalone
    image: "index.alauda.cn/toughstruct/toughwlan"
    privileged: true
    ports:
        - "${admin_port}:1810"
        - "${portal_listen_port}:50100"
    restart: always  
    volumes:
        - /home/toughrun/$instance:/var/toughwlan
EOF

        cd ${rundir}/$instance
        cat ${rundir}/$instance/docker-compose.yml
        docker-compose up -d
        docker-compose ps
        exit 0
    fi

    read -p "toughwlan portal haproxy port [1818]: " portal_ha_port
    portal_ha_port=${portal_ha_port:-1818}

    read -p "mysql port (3306): " mysql_port
    mysql_port=${mysql_port:-"3306"}

    read -p "mysql user [raduser]: " mysql_user
    mysql_user=${mysql_user:-raduser}

    read -p "mysql user password [radpwd]: " mysql_password
    mysql_password=${mysql_password:-radpwd}

    read -p "mysql database [radiusd]: " mysql_database
    mysql_database=${mysql_database:-radiusd}

    read -p "mysql root password [radroot]: " mysql_root_password
    mysql_root_password=${mysql_root_password:-radroot}

    cat <<EOF

    toughwlan instance config (with remote mysql & haproxy):

    instance name: $instance
    mysql_host: ${mysql_host}
    mysql_port: ${mysql_port}
    mysql_user: ${mysql_user}
    mysql_password: ${mysql_password}
    mysql_database: ${mysql_database}
    mysql_root_password: ${mysql_root_password}
    admin_port: ${admin_port}
    portal_auth_port: ${portal_auth_port}
    portal_listen_port: ${portal_listen_port}

EOF

    rm -f ${rundir}/$instance/docker-compose.yml
    cat > ${rundir}/$instance/docker-compose.yml  <<EOF
wlanpd:
    container_name: wlanpd_${instance}
    command: /usr/local/bin/toughrun portald
    image: "index.alauda.cn/toughstruct/toughwlan"
    privileged: true
    ports:
        - "${portal_listen_port}:50100/udp"
    environment:
        - DB_TYPE=mysql
        - DB_URL=mysql://$mysql_user:$mysql_password@$mysql_host:${mysql_port}/$mysql_database?charset=utf8
    restart: always
    ulimits:
        nproc: 65535
        nofile:
          soft: 20000
          hard: 40000    
    volumes:
        - /home/toughrun/$instance:/var/toughwlan
wlan:
    container_name: wlan_${instance}
    image: "index.alauda.cn/toughstruct/toughwlan"
    privileged: true
    ports:
        - "${admin_port}:1810"
    environment:
        - EXCLUDE_PORTS=6379,9001
        - DB_TYPE=mysql
        - DB_URL=mysql://$mysql_user:$mysql_password@$mysql_host:${mysql_port}/$mysql_database?charset=utf8
    restart: always
    ulimits:
        nproc: 65535
        nofile:
          soft: 20000
          hard: 40000    
    volumes:
        - /home/toughrun/$instance:/var/toughwlan
haproxy:
    container_name: haproxy_${instance}
    image: "index.alauda.cn/tutum/haproxy"
    privileged: true
    ports:
        - "${portal_ha_port}:80"
    links:
        - wlan:wlan
    restart: always
    ulimits:
        nproc: 65535
        nofile:
          soft: 20000
          hard: 40000    
EOF

    cd ${rundir}/$instance

    cat ${rundir}/$instance/docker-compose.yml

    docker-compose up -d

    docker-compose ps

    exit 0
}



docker_setup()
{
    curl -sSL https://get.daocloud.io/docker | sh

    curl -L https://get.daocloud.io/docker/compose/releases/download/1.5.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose

    ln -s /usr/local/bin/docker-compose /usr/local/bin/docp
}

remove()
{
    instance=${1:-toughwlan}
    cd ${rundir}/$instance
    docker-compose kill wlan
    docker-compose rm wlan
    rm -f ${rundir}/$instance/.install    
    docker-compose kill haproxy
    docker-compose rm haproxy
}


status()
{
    instance=${1:-toughwlan}
    cd ${rundir}/$instance
    docker-compose ps
}

restart()
{
    instance=${1:-toughwlan}

    cd ${rundir}/$instance
    docker-compose restart
    docker-compose ps
}

stop()
{
    instance=${1:-toughwlan}

    cd ${rundir}/$instance
    docker-compose stop
    docker-compose ps
}

scale()
{
    instance=${1:-toughwlan}
    snum=${2:-4}
    cd ${rundir}/$instance
    docker-compose scale wlan=$snum
    docker-compose restart
    docker-compose ps
}

logs()
{
    instance=${1:-toughwlan}
    cd ${rundir}/$instance
    logname=${2:-httpd}    
    tail -f ./$logname.log
}

upgrade()
{
    instance=${1:-toughwlan}    
    cd ${rundir}/$instance
    docker exec -it wlan_$instance /usr/local/bin/toughrun upgrade
    docker-compose restart 
    docker-compose ps
}

uplib()
{
    instance=${1:-toughwlan}    
    cd ${rundir}/$instance
    docker exec -it wlan_$instance /usr/local/bin/toughrun uplib
    docker-compose restart 
    docker-compose ps
}

dsh()
{
    instance=${1:-toughwlan}    
    cd ${rundir}/$instance
    docker exec -it wlan_$instance bash
}

pull()
{
    docker pull index.alauda.cn/toughstruct/mysql
    docker pull index.alauda.cn/toughstruct/toughwlan
    docker pull index.alauda.cn/tutum/haproxy
}

upshell()
{
    wget  https://raw.githubusercontent.com/talkincode/toughwlan/master/scripts/twshell  -O /usr/local/bin/twshell
    chmod +x /usr/local/bin/twshell
}



case "$1" in

  docker_setup)
    docker_setup
  ;;

  install)
    install $2
  ;;


  remove)
    remove $2
  ;;

  status)
    status $2
  ;;

  restart)
    restart $2
  ;;

  stop)
    stop $2
  ;;

  scale)
    scale $2 $3
  ;;

  logs)
    logs $2 $3
  ;;

  upgrade)
    upgrade $2
  ;;

  uplib)
    uplib $2
  ;;

  dsh)
    dsh $2
  ;;

  pull)
    pull 
  ;;

  upshell)
    upshell 
  ;;

  *)
   usage
  ;;

esac